
# INSTALL

Notes on installation.

The environment variable TOPDIR is set to the top level of the
distribution. CUTE-based unit testing is the default, set CUTEDIR to
CUTE's location.

There are now two methods for compiling STARE. The currently preferred
method is based on CMake and the second (deprecated) uses an old ad hoc
shell script.

Dependencies:
  Python3, Boost::Python: for PySTARE

########################################################################### 
#
# METHOD 1 CMake (Preferred)
#
# Out-of-source build. Assume ./STARE is the TOPDIR.
# 
# Products:
#   libSTARE.a and PySTARE.so (if built) will be in build/default/src
#   tests will be in build/default/tests
#   ./STARE/include contains the headers
#
$ mkdir build; cd build
$ cmake ../STARE
$ make

########################################################################### 
#
# METHOD 2 Configure + Make (Deprecated)
#
# In TOPDIR, construct the makefile. The configure script uses uname
# to try to determine which platform we're on.
$ ./configure
$ make

The object files and library archive (libSTARE.a) are in the 'unix' directory.

To use the library, include the files in 'include' and link to 'libSTARE.a'.

###########################################################################
#
# STARE SpatioTemporal Adaptive Resolution Encoding

An encoding for high-performance search and subsetting of geospatial data.

Development supported by NASA/ACCESS-17.

Copyrights and licenses as asserted in individual files. Legacy HTM distributed under GNU/GPLv2.

Copyright (c) 2019 Michael Lee Rilee, RSTLLC, mike@rilee.net

###########################################################################
#
# Cute additional comments

$ wget https://github.com/PeterSommerlad/CUTE/archive/master.zip
$ unzip master.zip 

option 1)
$ export CUTE_INCLUDE_DIR="/path/to/cute/"

option 2)
$ mkdir STARE/cute/
$ cp -r CUTE/cute STARE/cute/

###########################################################################
#
# Ubuntu 18.04 additional comments

$ sudo apt install cmake
$ sudo apt install g++
$ sudo apt install libboost-python-dev
$ sudo apt install libboost-numpy-dev

###########################################################################
#
# CentOS 7 additional comments

$ sudo yum install epel-release
$ sudo yum install cmake3
$ sudo yum install gcc-c++
$ sudo yum install python36-devel.x86_64

# the meta package "boost-python3-devel.x86_64" points to version 1.53, which does not contain boost-numpy
# therefore, install boost169-python3-devel

$ sudo yum install boost169-python3-devel.x86_64
$ sudo ln -s /usr/lib64/libboost_python34.so.1.69.0 /usr/lib64/libboost_python3.so
$ sudo ln -s /usr/lib64/libboost_numpy34.so.1.69.0 /usr/lib64/libboost_numpy3.so

###########################################################################
